{"version":3,"file":"static/js/204.73380d2c.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.js","redux/contacts/selectors.js","components/Filter/Filter.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","pages/ContactList/ContactList.jsx"],"sourcesContent":["import { Input } from 'antd';\nimport styled from 'styled-components';\n\nexport const WrapperFiler = styled.div`\n  font-size: 20px;\n`;\n\nexport const FilterInput = styled(Input)`\n  height: 40px;\n  width: 230px;\n  padding: 0 10px;\n  font-size: 20px;\n  border: 1px solid #000000;\n  border-radius: 7px;\n  transition: box-shadow cubic-bezier(0.17, 0.67, 0.86, 0.57) 300ms;\n`;\n\nexport const FilterP = styled.p`\n  font-weight: 500;\n  margin-bottom: 20px;\n  color: #2e2d2dbc;\n`;","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilter = state => state.filter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/filterSlice';\nimport { WrapperFiler, FilterInput, FilterP } from './Filter.styled';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(selectFilter);\n\n  const handleChange = e => {\n    dispatch(changeFilter(e.target.value));\n  };\n\n  return (\n    <WrapperFiler>\n      <FilterP>Find contacts by name</FilterP>\n\n      <FilterInput\n        prefix={<SearchOutlined />}\n        type=\"text\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </WrapperFiler>\n  );\n};\n","import styled from 'styled-components';\nimport { Button, Input, Modal } from 'antd';\nimport { PhoneOutlined, UserAddOutlined } from '@ant-design/icons';\n\nexport const FormWrap = styled.form`\n  margin: 0 auto;\n`;\n\nexport const AddModalBtn = styled(Button)`\n  width: 100%;\n  height: 35px;\n  font-size: 18px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const UserIcon = styled(UserAddOutlined)`\n  color: #c7c6c6;\n  margin-right: 10px;\n`;\n\nexport const PhoneIcon = styled(PhoneOutlined)`\n  color: #c7c6c6;\n  margin-right: 10px;\n`;\n\nexport const InputForm = styled(Input)`\n  height: 35px;\n  font-size: 18px;\n  width: 100%;\n  margin-bottom: 15px;\n`;\n\nexport const AddModal = styled(Modal)`\n  text-align: center;\n  .ant-modal-content {\n    width: 340px;\n    height: 225px;\n    position: absolute;\n    top: 50%;\n    left: 20%;\n  }\n`;\n\nexport const OpenAddModal = styled(Button)`\n  margin: 15px 0;\n`;\n","import { useState } from 'react';\nimport { addContact } from 'redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  FormWrap,\n  AddModalBtn,\n  UserIcon,\n  PhoneIcon,\n  InputForm,\n  AddModal,\n  OpenAddModal,\n} from './ContactForm.styled';\nimport { PlusCircleOutlined } from '@ant-design/icons';\nimport { useFormik } from 'formik';\nimport { selectContacts, selectIsLoading } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const [open, setOpen] = useState(false);\n  const currentContacts = useSelector(selectContacts);\n  const loader = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  const handleSubmit = values => {\n    const formatTel = () => {\n      const number = values.phone;\n      const phoneLength = number.length;\n      if (phoneLength < 7) {\n        return `(${number.slice(0, 3)}) ${number.slice(3)}`;\n      }\n      return `(${number.slice(0, 3)}) ${number.slice(3, 6)}-${number.slice(\n        6,\n        10\n      )}`;\n    };\n\n    const newContact = { name: values.name, number: formatTel() };\n    const newContactName = newContact.name.toLowerCase();\n\n    if (\n      currentContacts.find(\n        contact => contact.name.toLowerCase() === newContactName\n      )\n    ) {\n      alert(`${newContact.name} is already in contact`);\n    } else {\n      dispatch(addContact(newContact));\n      if (!loader) {\n        setOpen(false);\n      }\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      phone: '',\n    },\n    onSubmit: handleSubmit,\n  });\n\n  const showModal = () => {\n    setOpen(true);\n    formik.values.name = '';\n    formik.values.phone = '';\n  };\n\n  return (\n    <>\n      <OpenAddModal onClick={showModal} title=\"Add new contact\">\n        <PlusCircleOutlined />\n        Add contact\n      </OpenAddModal>\n      <AddModal\n        footer={null}\n        title=\"Add new contact\"\n        open={open}\n        onCancel={() => setOpen(false)}\n      >\n        <FormWrap onSubmit={formik.handleSubmit}>\n          <InputForm\n            prefix={<UserIcon />}\n            name=\"name\"\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            type=\"text\"\n            placeholder=\"Name\"\n          />\n          <InputForm\n            prefix={<PhoneIcon />}\n            name=\"phone\"\n            value={formik.values.phone}\n            onChange={formik.handleChange}\n            type=\"text\"\n            placeholder=\"Number\"\n          />\n\n          <AddModalBtn type=\"primary\" htmlType=\"submit\">\n            Create contact\n          </AddModalBtn>\n        </FormWrap>\n      </AddModal>\n    </>\n  );\n};\n","import {\n  Item,\n  List,\n  ButtonRedact,\n  UserIcon,\n  PhoneIcon,\n  InputForm,\n  ModalRedact,\n  UserIconList,\n  PhoneiconList,\n  DivName,\n  Spiner,\n  Title,\n  Container,\n} from './ContactList.styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  deleteContact,\n  redactContact,\n  fetchContacts,\n} from '../../redux/contacts/operations';\n\nimport { useEffect, useState } from 'react';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Button, Popconfirm } from 'antd';\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport {\n  selectContacts,\n  selectFilter,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\n\nexport default function ContactList() {\n  const [subName, setSubName] = useState('');\n  const [subNumber, setSubNumber] = useState('');\n  const [subId, setSubId] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleOk = () => {\n    setIsModalOpen(false);\n    dispatch(redactContact({ id: subId, name: subName, number: subNumber }));\n  };\n\n  const showModal = (name, number, id) => {\n    setSubNumber(number);\n    setSubName(name);\n    setSubId(id);\n    setIsModalOpen(true);\n  };\n\n  const handleCancel = () => {\n    setIsModalOpen(false);\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const loader = useSelector(selectIsLoading);\n  const contacts = useSelector(selectContacts);\n  const filterData = useSelector(selectFilter).toLowerCase();\n\n  const visibleContacts = contacts.filter(subscriber =>\n    subscriber.name.toLowerCase().includes(filterData)\n  );\n\n  return (\n    <section>\n      <Container>\n        <div>\n          {contacts.length < 1 ? (\n            <Title>Add your first contact</Title>\n          ) : (\n            <Filter />\n          )}\n          <ContactForm />\n          {loader && <Spiner />}\n        </div>\n        <List>\n          {visibleContacts.map(({ id, name, number }) => (\n            <Item key={id}>\n              <DivName>\n                <UserIconList />\n                {name}:\n              </DivName>\n              <PhoneiconList /> {number}\n              <ButtonRedact\n                onClick={() => showModal(name, number, id)}\n                title=\"Edit contact\"\n              >\n                <EditOutlined />\n                Edit\n              </ButtonRedact>\n              <Popconfirm\n                title=\"Are you sure delete this task?\"\n                okText=\"Yes\"\n                cancelText=\"No\"\n                onConfirm={() => dispatch(deleteContact(id))}\n              >\n                <Button title=\"delete contact\" type=\"primary\">\n                  <DeleteOutlined /> Delete\n                </Button>\n              </Popconfirm>\n            </Item>\n          ))}\n\n          <ModalRedact\n            title=\"Edit a contact\"\n            open={isModalOpen}\n            onOk={handleOk}\n            onCancel={handleCancel}\n          >\n            <InputForm\n              prefix={<UserIcon />}\n              value={subName}\n              onChange={e => {\n                setSubName(e.target.value);\n              }}\n            />\n            <InputForm\n              prefix={<PhoneIcon />}\n              value={subNumber}\n              onChange={e => {\n                setSubNumber(e.target.value);\n              }}\n            />\n          </ModalRedact>\n        </List>\n      </Container>\n    </section>\n  );\n}\n"],"names":["WrapperFiler","styled","_templateObject","_taggedTemplateLiteral","FilterInput","Input","_templateObject2","FilterP","_templateObject3","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","Filter","dispatch","useDispatch","useSelector","_jsxs","children","_jsx","prefix","SearchOutlined","type","value","onChange","e","changeFilter","target","FormWrap","AddModalBtn","Button","UserIcon","UserAddOutlined","PhoneIcon","PhoneOutlined","_templateObject4","InputForm","_templateObject5","AddModal","Modal","_templateObject6","OpenAddModal","_templateObject7","ContactForm","_useState","useState","_useState2","_slicedToArray","open","setOpen","currentContacts","loader","formik","useFormik","initialValues","name","phone","onSubmit","values","newContact","number","length","concat","slice","formatTel","newContactName","toLowerCase","find","contact","alert","addContact","_Fragment","onClick","title","PlusCircleOutlined","footer","onCancel","handleSubmit","handleChange","placeholder","htmlType","ContactList","subName","setSubName","_useState3","_useState4","subNumber","setSubNumber","_useState5","_useState6","subId","setSubId","_useState7","_useState8","isModalOpen","setIsModalOpen","useEffect","fetchContacts","filterData","visibleContacts","subscriber","includes","Container","Title","Spiner","List","map","_ref","id","Item","DivName","UserIconList","PhoneiconList","ButtonRedact","showModal","EditOutlined","Popconfirm","okText","cancelText","onConfirm","deleteContact","DeleteOutlined","ModalRedact","onOk","redactContact"],"sourceRoot":""}